{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avita\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ReactApps\\\\task-list\\\\ui\\\\src\\\\components\\\\UpdateTaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Dialog, DialogTitle, TextField } from \"@mui/material\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport axios from \"axios\";\nimport { API_URL } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UpdateTaskForm = ({\n  fetchTasks,\n  isDialogOpen,\n  setIsDialogOpen,\n  task\n}) => {\n  _s();\n  const {\n    id,\n    completed\n  } = task;\n  const [taskName, setTaskName] = useState(\"\");\n  const handleUpdateTaskName = async () => {\n    try {\n      await axios.put(API_URL, {\n        id,\n        name: taskName,\n        completed\n      });\n      await fetchTasks();\n      setTaskName(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: isDialogOpen,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Edit Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dialog\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        size: \"small\",\n        label: \"Task\",\n        variante: \"outline\",\n        onChange: e => setTaskName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: async () => {\n          await handleUpdateTaskName();\n          setIsDialogOpen(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateTaskForm, \"jFyIIgtr7T7nSRlx2lb5tzJhx68=\");\n_c = UpdateTaskForm;\nvar _c;\n$RefreshReg$(_c, \"UpdateTaskForm\");","map":{"version":3,"names":["React","useState","Button","Dialog","DialogTitle","TextField","CheckIcon","axios","API_URL","jsxDEV","_jsxDEV","UpdateTaskForm","fetchTasks","isDialogOpen","setIsDialogOpen","task","_s","id","completed","taskName","setTaskName","handleUpdateTaskName","put","name","err","console","log","open","children","fileName","_jsxFileName","lineNumber","columnNumber","className","size","label","variante","onChange","e","target","value","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/avita/OneDrive/שולחן העבודה/ReactApps/task-list/ui/src/components/UpdateTaskForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Dialog, DialogTitle, TextField } from \"@mui/material\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport axios from \"axios\"\r\nimport { API_URL } from \"../utils\";\r\n\r\nexport const UpdateTaskForm = ({ fetchTasks,  isDialogOpen,  setIsDialogOpen, task}) => {\r\n\r\n  const { id, completed } = task;\r\n  const [taskName, setTaskName] = useState(\"\");\r\n\r\n  const handleUpdateTaskName = async () => {\r\n    try {\r\n      await axios.put(API_URL,{id, name: taskName, completed})\r\n      await fetchTasks();\r\n      setTaskName(\"\");\r\n\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog open={isDialogOpen}>\r\n      <DialogTitle>Edit Task</DialogTitle>\r\n      <div className=\"dialog\">\r\n        <TextField\r\n          size=\"small\"\r\n          label=\"Task\"\r\n          variante=\"outline\"\r\n          onChange={(e) => setTaskName(e.target.value)}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={async () => {\r\n            await handleUpdateTaskName();\r\n            setIsDialogOpen(false);\r\n          }}\r\n        >\r\n          <CheckIcon />\r\n        </Button>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,MAAM,EAAEC,WAAW,EAAEC,SAAS,QAAQ,eAAe;AACtE,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,OAAO,MAAMC,cAAc,GAAGA,CAAC;EAAEC,UAAU;EAAGC,YAAY;EAAGC,eAAe;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAEtF,MAAM;IAAEC,EAAE;IAAEC;EAAU,CAAC,GAAGH,IAAI;EAC9B,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMoB,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMd,KAAK,CAACe,GAAG,CAACd,OAAO,EAAC;QAACS,EAAE;QAAEM,IAAI,EAAEJ,QAAQ;QAAED;MAAS,CAAC,CAAC;MACxD,MAAMN,UAAU,CAAC,CAAC;MAClBQ,WAAW,CAAC,EAAE,CAAC;IAEjB,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EAED,oBACEd,OAAA,CAACP,MAAM;IAACwB,IAAI,EAAEd,YAAa;IAAAe,QAAA,gBACzBlB,OAAA,CAACN,WAAW;MAAAwB,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eACpCtB,OAAA;MAAKuB,SAAS,EAAC,QAAQ;MAAAL,QAAA,gBACrBlB,OAAA,CAACL,SAAS;QACR6B,IAAI,EAAC,OAAO;QACZC,KAAK,EAAC,MAAM;QACZC,QAAQ,EAAC,SAAS;QAClBC,QAAQ,EAAGC,CAAC,IAAKlB,WAAW,CAACkB,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFtB,OAAA,CAACR,MAAM;QACLuC,OAAO,EAAC,WAAW;QACnBC,OAAO,EAAE,MAAAA,CAAA,KAAY;UACnB,MAAMrB,oBAAoB,CAAC,CAAC;UAC5BP,eAAe,CAAC,KAAK,CAAC;QACxB,CAAE;QAAAc,QAAA,eAEFlB,OAAA,CAACJ,SAAS;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAAChB,EAAA,CAtCWL,cAAc;AAAAgC,EAAA,GAAdhC,cAAc;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}