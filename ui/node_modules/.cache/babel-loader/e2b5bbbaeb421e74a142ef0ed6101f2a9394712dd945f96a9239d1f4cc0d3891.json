{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avita\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ReactApps\\\\task-list\\\\ui\\\\src\\\\components\\\\Task.js\",\n  _s = $RefreshSig$();\nimport { Button } from \"@mui/base\";\nimport { Checkbox, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { UpdateTaskForm } from \"./UpdateTaskForm\";\nimport classnames from \"classnames\";\nimport axios from \"axios\";\nimport { API_URL } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Task = ({\n  task,\n  fetchTasks\n}) => {\n  _s();\n  const {\n    id,\n    name,\n    completed\n  } = task;\n  const [isComplete, setIsComplete] = useState(completed);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const handleUpdateTaskComplition = async () => {\n    try {\n      await axios.put(API_URL, {\n        id,\n        name,\n        completed: !isComplete\n      });\n      setIsComplete(prev => !prev);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const handleDeleteTask = async () => {\n    try {\n      await axios.delete(`API_URL/${task.id}`);\n      await fetchTasks();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames(\"flex\", {\n        done: isComplete\n      }),\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: isComplete,\n        onChange: handleUpdateTaskComplition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskButtons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => setIsDialogOpen(true),\n        children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"error\",\n        variant: \"contained\",\n        onClick: handleDeleteTask,\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateTaskForm, {\n      fetchTasks: fetchTasks,\n      isDialogOpen: isDialogOpen,\n      setIsDialogOpen: setIsDialogOpen,\n      task: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Task, \"8LIzbQuOHkTIUSfh8UTlrajktBY=\");\n_c = Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["Button","Checkbox","Typography","React","useState","DeleteIcon","EditIcon","UpdateTaskForm","classnames","axios","API_URL","jsxDEV","_jsxDEV","Task","task","fetchTasks","_s","id","name","completed","isComplete","setIsComplete","isDialogOpen","setIsDialogOpen","handleUpdateTaskComplition","put","prev","err","console","log","handleDeleteTask","delete","className","children","done","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","color","_c","$RefreshReg$"],"sources":["C:/Users/avita/OneDrive/שולחן העבודה/ReactApps/task-list/ui/src/components/Task.js"],"sourcesContent":["import { Button } from \"@mui/base\";\r\nimport { Checkbox, Typography } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { UpdateTaskForm } from \"./UpdateTaskForm\";\r\nimport classnames from \"classnames\"\r\nimport axios from \"axios\"\r\nimport { API_URL } from \"../utils\";\r\n\r\nexport const Task = ({ task, fetchTasks }) => {\r\n  const { id, name, completed } = task;\r\n  const [isComplete, setIsComplete] = useState(completed);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n\r\n  const handleUpdateTaskComplition = async () => {\r\n    try {\r\n      await axios.put(API_URL,{id, name, completed: !isComplete})\r\n      setIsComplete((prev) => !prev);\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  };\r\n\r\n  const handleDeleteTask = async () => {\r\n    try {\r\n      await axios.delete(`API_URL/${task.id}`)\r\n      await fetchTasks();\r\n\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"task\">\r\n      <div className={classnames(\"flex\",{\r\n        done: isComplete\r\n      })}>\r\n        <Checkbox checked={isComplete} onChange={handleUpdateTaskComplition} />\r\n        <Typography variant=\"h4\">{name}</Typography>\r\n      </div>\r\n\r\n      <div className=\"taskButtons\">\r\n        <Button variant=\"contained\" onClick={() => setIsDialogOpen(true)}>\r\n          <EditIcon />\r\n        </Button>\r\n\r\n        <Button color=\"error\" variant=\"contained\" onClick={handleDeleteTask}>\r\n          <DeleteIcon />\r\n        </Button>\r\n      </div>\r\n\r\n      <UpdateTaskForm\r\n        fetchTasks={fetchTasks}\r\n        isDialogOpen={isDialogOpen}\r\n        setIsDialogOpen={setIsDialogOpen}\r\n        task={task}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}